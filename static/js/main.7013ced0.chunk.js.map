{"version":3,"sources":["contexts/MovieContext.js","components/MovieForm.js","components/MovieDetails.js","components/MovieList.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["MovieContext","createContext","MovieContextProvider","props","useState","movies","setMoives","Provider","value","addMovie","title","genre","id","uuidv4","removeMovie","filter","movie","children","NewMovieForm","useContext","setTitle","setGenre","onSubmit","e","preventDefault","type","placeholder","onChange","target","required","MovieDetails","onClick","className","MovieList","length","map","Navbar","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAGaA,EAAeC,0BAgCbC,EA9Bc,SAACC,GAc5B,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KASA,OACE,cAACN,EAAaO,SAAd,CAAuBC,MAAO,CAAEH,SAAQI,SARzB,SAACC,EAAOC,GACvBL,EAAU,GAAD,mBAAKD,GAAL,CAAa,CAAEK,QAAOC,QAAOC,GAAIC,mBAOQC,YALhC,SAACF,GACnBN,EAAUD,EAAOU,QAAO,SAACC,GAAD,OAAWA,EAAMJ,KAAOA,QAIhD,SACGT,EAAMc,YCKEC,EAhCM,WACnB,IAAQT,EAAaU,qBAAWnB,GAAxBS,SACR,EAA0BL,mBAAS,IAAnC,mBAAOM,EAAP,KAAcU,EAAd,KACA,EAA0BhB,mBAAS,IAAnC,mBAAOO,EAAP,KAAcU,EAAd,KAQA,OACE,uBAAMC,SAPa,SAACC,GACpBA,EAAEC,iBACFf,EAASC,EAAOC,GAChBS,EAAS,IACTC,EAAS,KAGT,UACE,uBACEI,KAAK,OACLC,YAAY,cACZlB,MAAOE,EACPiB,SAAU,SAACJ,GAAD,OAAOH,EAASG,EAAEK,OAAOpB,QACnCqB,UAAQ,IAEV,uBACEJ,KAAK,OACLC,YAAY,QACZlB,MAAOG,EACPgB,SAAU,SAACJ,GAAD,OAAOF,EAASE,EAAEK,OAAOpB,QACnCqB,UAAQ,IAEV,uBAAOJ,KAAK,SAASjB,MAAM,kBCjBlBsB,EAVM,SAAC,GAAe,IAAbd,EAAY,EAAZA,MACdF,EAAgBK,qBAAWnB,GAA3Bc,YACR,OACE,qBAAIiB,QAAS,kBAAMjB,EAAYE,EAAMJ,KAArC,UACE,qBAAKoB,UAAU,QAAf,SAAwBhB,EAAMN,QAC9B,qBAAKsB,UAAU,QAAf,SAAwBhB,EAAML,YCWrBsB,EAfG,WAChB,IAAQ5B,EAAWc,qBAAWnB,GAAtBK,OACR,OAAOA,EAAO6B,OACZ,qBAAKF,UAAU,aAAf,SACE,6BACG3B,EAAO8B,KAAI,SAACnB,GACX,OAAO,cAAC,EAAD,CAAcA,MAAOA,GAAYA,EAAMJ,WAKpD,qBAAKoB,UAAU,QAAf,kCCFWI,EAVA,WACb,IAAQ/B,EAAWc,qBAAWnB,GAAtBK,OACR,OACE,sBAAK2B,UAAU,SAAf,UACE,+CACA,oDAAuB3B,EAAO6B,OAA9B,0BCUSG,MAZf,WACE,OACE,qBAAKL,UAAU,MAAf,SACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UCAOM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7013ced0.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const MovieContext = createContext();\r\n\r\nconst MovieContextProvider = (props) => {\r\n  // test examples\r\n  // const [movies, setMoives] = useState([\r\n  //   {\r\n  //     title: \"Harry Potter and the Prisoner of Azkaban\",\r\n  //     genre: \"Fantasy\",\r\n  //     id: 1,\r\n  //   },\r\n  //   {\r\n  //     title: \"Bad Trip\",\r\n  //     genre: \"Comedy\",\r\n  //     id: 2,\r\n  //   },\r\n  // ]);\r\n  const [movies, setMoives] = useState([]);\r\n\r\n  const addMovie = (title, genre) => {\r\n    setMoives([...movies, { title, genre, id: uuidv4() }]);\r\n  };\r\n  const removeMovie = (id) => {\r\n    setMoives(movies.filter((movie) => movie.id !== id));\r\n  };\r\n\r\n  return (\r\n    <MovieContext.Provider value={{ movies, addMovie, removeMovie }}>\r\n      {props.children}\r\n    </MovieContext.Provider>\r\n  );\r\n};\r\n\r\nexport default MovieContextProvider;\r\n","import React, { useContext, useState } from \"react\";\r\nimport { MovieContext } from \"../contexts/MovieContext\";\r\n\r\nconst NewMovieForm = () => {\r\n  const { addMovie } = useContext(MovieContext);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [genre, setGenre] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addMovie(title, genre);\r\n    setTitle(\"\");\r\n    setGenre(\"\");\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"movie title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"genre\"\r\n        value={genre}\r\n        onChange={(e) => setGenre(e.target.value)}\r\n        required\r\n      />\r\n      <input type=\"submit\" value=\"add movie\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NewMovieForm;\r\n","import React, { useContext } from \"react\";\r\nimport { MovieContext } from \"../contexts/MovieContext\";\r\n\r\nconst MovieDetails = ({ movie }) => {\r\n  const { removeMovie } = useContext(MovieContext);\r\n  return (\r\n    <li onClick={() => removeMovie(movie.id)}>\r\n      <div className=\"title\">{movie.title}</div>\r\n      <div className=\"genre\">{movie.genre}</div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import React, { useContext } from \"react\";\r\nimport { MovieContext } from \"../contexts/MovieContext\";\r\nimport MovieDetails from \"./MovieDetails\";\r\n\r\nconst MovieList = () => {\r\n  const { movies } = useContext(MovieContext);\r\n  return movies.length ? (\r\n    <div className=\"movie-list\">\r\n      <ul>\r\n        {movies.map((movie) => {\r\n          return <MovieDetails movie={movie} key={movie.id} />;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  ) : (\r\n    <div className=\"empty\">No movies to watch </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React, { useContext } from \"react\";\r\nimport { MovieContext } from \"../contexts/MovieContext\";\r\n\r\nconst Navbar = () => {\r\n  const { movies } = useContext(MovieContext);\r\n  return (\r\n    <div className=\"navbar\">\r\n      <h1>My Movie List</h1>\r\n      <p>Currently you have {movies.length} movies to watch</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\nimport NewMovieForm from \"./components/MovieForm\";\nimport MovieList from \"./components/MovieList\";\nimport Navbar from \"./components/Navbar\";\nimport MovieContextProvider from \"./contexts/MovieContext\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MovieContextProvider>\n        <Navbar />\n        <MovieList />\n        <NewMovieForm />\n      </MovieContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}